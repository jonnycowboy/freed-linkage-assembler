 
 
_BGColor = White;
:OPNS;
:DRAW_POINT_AS_SPHERE;
:N3_SOLID;
SetPointSize(10);
SetLineWidth(4);

SetTextMagStep( 12 );
SetImageAlign( 0.5, 0.5 );

    
?sText = String( @"Vector ({1:TF.2})^\alpha, List {2:TF.1}", [ VecE3(1.234,2.567,3.123), [ 2.345, VecE3(1,2,3)] ] );

    :Black;
    :GetTextImage( sText );

		
DefVarsN3();
Tau = 2*Pi;

:e1 :Black :OPNS;
:e2 :Color(0.4, 0.4, 0.4) :OPNS;
:e3 :Color(0.8, 0.8, 0.8) :OPNS;

// Make some basic points
:A = VecN3(-0.5, 0.0, 1.0) :Red :IPNS;
:B = VecN3(1.0, -0.5, 2.0) :Blue :IPNS;
:C = VecN3(0.0, 1.5, 3.0) :Green :IPNS;

:X = VecN3(0.0, 2.0, 0.0) :Black :IPNS;
?X;

// A plane is a degenerate sphere
// The intersection of two spheres is a circle
// This reverses the process, given an
// infinite sphere (the plane) and 
// a circle find the smallest sphere 
// whose intersection with the plane 
// results in that circle.
:Circle = *(A^B^C) :Magenta :IPNS;
Plane = *(A^B^C^einf);

:Sphere = Circle * Plane :Orange :IPNS;
?Sphere;
?Distance = Sphere . X;