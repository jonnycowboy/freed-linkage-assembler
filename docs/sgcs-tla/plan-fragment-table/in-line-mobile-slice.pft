
---
PFT entry: ALL
---

Constraint:
  in-line(?M_1, ?M_2)


---
PFT entry: (?M_1 moves)
---

Assumptions:
  marker-has-invariant-position(?M_2)
  marker_has_invariant-z(?M_2)
  geom-has_marker(?link, ?M_1)


---
PFT entry: (0,0,in-line)  (M_1 moves)
---

Initial status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Plan fragment:
  begin
  R[0] = line(gmp(?M_2), gmp(?M_2));
  R[1] = perp-dist(gmp(?M_1), R[0]);
  unless zero?(R[1])
    error(R[1], estring[9]);
  end;

New status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Explanation:
  Geom ?link is fixed, so the in-line constraint
  can only be checked for consistency.


---
PFT entry: (1,0,in-line) (?M_1 moves)
---

Initial status:
  1-TDOF(?link, ?point, ?line, ?lf)
  0-RDOF(?link)

Plan fragment:
  begin
  R[0] = axis(?line);
  R[1] = line(gmp(?M_2), gmz(?M_2));
  R[2] = line(gmp(?M_1), R[0]);
  R[3] = intersect(R[1], R[2], 0);
  unless point?(R[3])
    error(perp-dist(R[1], R[2]),
    estring[7]);
  translate(?link,
    vec-diff(R[3], gmp(?M_1)));
  end;

New status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Explanation:
  Geom ?link cannot rotate.
  Therefore, the in-line constraint must be satisfied by a translation.
  In the degenerate case, the point is already on the line,
  which causes inaccuracies in the degrees of freedom tally.


---
PFT entry: (2,0,in-line) (?M_1 moves)
---

Initial status:
  2-TDOF(?link, ?point, ?plane, ?lf)
  0-RDOF(?link)

Plan fragment:
  begin
  R[0] = normal(?plane);
  R[1] = line(gmp(?M_2), gmz(?M_2));
  R[2] = plane(gmp(?M_1), R[0]);
  R[3] = intersect(R[1], R[2], 0);
  unless point?(R[3])
    error(perp-dist(R[1], R[2]),
    estring[7]);
  translate(?link,
    vec-diff(R[3], gmp(?M_1)));
  end;

New status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Explanation:
  Geom ?link cannot rotate.
  Therefore, the in-line constraint must be satisfied by a translation.
  In the degenerate case, the point is already in the plane,
  which causes inaccuracies in the degrees of freedom tally.


---
PFT entry: (3,0,in-line) (?M_1 moves)
---

Initial status:
  3-TDOF(?link)
  0-RDOF(?link)

Plan fragment:
  begin
  R[0] = line(gmp(?M_2), gmz(?M_2));
  R[1] = perp-dist(gmp(?M_1), R[0]),
  R[2] = vec-diff(R[1], gmp(?M_1));
  translate(?link, R[2]);
  R[3] = perp-base(gmp(?M_1), R[0]);
  end;

New status:
  1-TDOF(?link, R[3], R[0], R[3])
  0-RDOF(?link)

Explanation:
  Geom ?link is free to translate,
  so the translation vector is measured and the geom is moved.
  No checks are required.

---
PFT entry: (h,h,in-line) (?M_1 moves)
---

Initial status:
  h-TDOF(?link, ?point, ?line, ?point)
  h-RDOF(?link, ?axis, ?axis_1, ?axis_2)

Branch variables:
  q_0, denoting a potenially infinite branch

Plan fragment:
  begin
  R[0] = line(gmp(?M_2), gmz(?M_2));
  R[1] = pc-locus(?line, ?point, gmp(?M_1));
  R[2] = intersect(R[1], R[0], q_0);
  unless point?(R[2])
    error(perp-dist(R[1], R[0]),
    estring[7]);
  R[3] = centerline(?line);
  R[4] = perp-base(R[2], R[3]);
  R[5] = vec-diff(R[2], R[3]);
  R[6] = perp-base(gmp(?M_1, R[3]);
  R[7] = vec-diff(gmp(?M_1), R[3]);
  translate(?link, vec-diff(R[4], R[6]));
  R[8] = vec-angle(R[7], R[5], ?axis);
  if null?(?axis_1) and null?(?axis_2)
    then rotate(?link, ?point, ?axis, R[8])
    else 2r/a(?link, ?point, R[8],
      ?axis, ?axis_1, ?axis_2);
  end;

New status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Explanation:
  Points on ?link are confined to a helix.
  Geom ?link is translated and rotated, both
  along and about the screw axis.
  First, the point on the line defimed by ?M_2
  and its z axis which will coincide with ?M_1 is found;
  then, the geom is moved to make that point coincident.


---
PFT entry: (0,1,in-line) (?M_1 moves)
---

Initial status:
  0-TDOF(?link, ?point)
  1-RDOF(?link, ?axis, ?axis_1, ?axis_2)

Branch variables:
  q_0, denoting a 2-way branch

Plan fragment:
  begin
  R[0] = line(?point, ?axis);
  R[1] = perp-base(gmp(?M_1), R[0]);
  R[2] = vec-diff(gmp(?M_1), R[1]);
  R[3] = circle(R[1], ?axis, mag(R[2]));
  R[4] = line(gmp(?M_2), gmz(?M_2));
  R[2] = intersect(R[3], R[4], q_0);
  unless point?(R[5])
    error(perp-dist(R[3], R[4]),
    estring[4]);
  1r/p-p(?link, ?point, gmp(?M_1), R[5],
    ?axis, ?axis_1, ?axis_2);
  end;

New status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Explanation:
  Geom ?link has only one rotational degree of freedom.
  Therefore it must be rotated about its known point and known axis.
  First, the point on the line defined by ?M_2 and its z-axis
  which will coincide with ?M_1 is found;
  then, the geom is rotated to make ?M_1 coincident with that point.
  In general, there are two distinct solutions to this problem,
  so a branch variable q_0 is used to select the desired solution.


---
PFT entry: (1,1,in-line) (?M_1 moves)
---

Initial status:
  1-TDOF(?link, ?point, ?line, ?lf)
  1-RDOF(?link, ?axis, ?axis_1, ?axis_2)

Branch variables:
  q_0, denoting a 2-way branch

Plan fragment:
  begin
  R[0] = perp-base(gmp(?M_1), ?line);
  R[1] = vec-diff(gmp(?M_1), R[0]);
  R[2] = cylinder(?line, ?axis, mag(R[1]));
  R[3] = line(gmp(?M_2), gmz(?M_2));
  R[4] = intersect(R[2], R[3], q_0);
  unless point?(R[4])
    error(perp-dist(R[2], R[3]),
    estring[4]);
  1t-1r/p-p(?link, ?point, ?line,
    ?axis, ?axis_1, ?axis_2,
    gmp(?M_1), R[4], ?lf, 0);
  end;

New status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Explanation:
  Geom ?link has only one rotational and one translational degree of freedom.
  First, the point on the line defined by ?M_2 and its z-axis which
  will coincide with ?M_1 is found;
  then, the geom is translated and rotated to make ?M_1
  coincident with that point.
  In general, there are two distinct solutions to this problem,
  so a branch variable q_0 is used to select the desired solution.



---
PFT entry: (2,1,in-line)  (?M_1 moves)
---

Initial status:
  2-TDOF(?link, ?point, ?plane, ?lf)
  1-RDOF(?link, ?axis, ?axis_1, ?axis_2)

Branch variables:
  q_0, denoting a 2-way branch

Plan fragment:
  begin
  R[0] = line(gmp(?M_2), gmz(?M_2));
  R[1] = plane(gmp(?M_1), normal(?plane));
  R[2] = intersect(R[0], R[1], 0);
  unless R[2]
    R[2] = gmp(?M_2)

  2t-1r/p-p(?link, ?point, ?plane,
    ?axis, ?axis_1, ?axis_2,
    gmp(?M_1), R[2], ?lf, q_0);

  R[3] = plane(?point, ?axis);
  R[4] = intersect(R[0], R[3], 0);
  R[5] = vec-diff(?point, R[4]);
  R[6] = cylinder(R[0], ?axis, mag(R[5]));
  R[7] = intersect(R[6], ?plane, 0);
  R[8] = a-point(R[7]);
  R[9] = perp-dist(R[8], ?point),
  R[10] = ellipse-+-r(R[7], ?axis, R[9]);
  end;

New status:
  h-TDOF(?link, R[8], R[10], R[8])
  h-RDOF(?link, ?axis, ?axis_1, ?axis_2)

Explanation:
  Geom ?link has one rotational and two translational degrees of freedom.
  Therefore it must be translated along its
  known ?plane and rotated about its known ?axis.
  This effect is achieved by translating the ?link to make the
  markers coincident, and then attempting to move ?point back onto ?plane.
  In general, there are two distinct solutions to this problem,
  so a branch variable q_0 is used to select the desired solution.


---
PFT entry: (3,1,in-line) (?M_1 moves)
---

Initial status:
  3-TDOF(?link)
  1-RDOF(?link, ?axis, ?axis_1, ?axis_2)

Plan fragment:
  begin
  R[0] = line(gmp(?M_2), gmz(?M_2));
  R[1] = perp-base(gmp(?M_1), R[0]);
  R[2] = vec-diff(R[1], gmp(?M_1));
  translate(?link, R[2]);
  R[3] = gmp(?M_1);
  end;

New status:
  1-TDOF(?link, R[3], R[0], R[0])
  1-RDOF(?link, ?axis, ?axis_1, ?axis_2)

Explanation:
  Geom ?link is free to translate, so the translation
  vector is measured and the geom is moved.
  No checks are required.


---
PFT entry: (0,2,in-line) (?M_1 moves)
---

Initial status:
  0-TDOF(?link, ?point)
  2-RDOF(?link, ?axis_1, ?axis_2)

Branch variables:
  q_0, denoting a 2-way branch
  q_1, denoting a 2-way branch

Plan fragment:
  begin
  R[0] = vec-diff(gmp(?M_1), ?point);
  R[1] = sphere(?point, mag(R[0]));
  R[2] = line(gmp(?M_2), gmz(?M_2));
  R[3] = intersect(R[1], R[2], q_0);
  unless point?(R[3])
    error(perp-dist(R[1], R[2]),
    estring[7]);

  2r/p-p(?link, ?point,
    gmp(?M_1), R[3],
    ?axis_1, ?axis_2, q_1);
  end;


New status:
  0-TDOF(?link, ?point)
  0-RDOF(?link)

Explanation:
  Geom ?link has two rotational degrees of fredom.
  The line defined by marker ?M_2 and its z-axis is
  constructed, and the point that will coincide with
  marker ?M_1 is found.
  There are two possible locations for this point,
  which are disambiguated by branch variable q_0.
  Then, ?link is rotated to put the point into
  coincidence with ?M_1;


---
PFT entry: (0,3,in-line) (?M_1 moves)
---

Initial status:
  0-TDOF(?link, ?point)
  3-RDOF(?link)

Plan fragment:
  begin
  R[0] = vec-diff(gmp(?M_1), ?point);
  R[1] = sphere(?point, mag(R[0]));
  R[2] = line(gmp(?M_2), gmz(?M_2));
  R[3] = intersect(R[1], R[2], q_0);
  unless point?(R[3])
    error(perp-dist(R[1], R[2]),
    estring[7]);

  3r/p-p(?link, ?point, gmp(?M_1), R[3]);
  R[4] = vec-diff(gmp(?M_2), ?point);
  end;

New status:
  0-TDOF(?link, ?point)
  1-RDOF(?link, R[4], nil, nil)

Explanation:
  Geom ?link cannot translate, so the in-line
  constraint is satisfied by a rotation.


---
PFT entry: (1,3,in-line) (?M_1 moves)
---

Initial status:
  1-TDOF(?link, ?point, ?line, ?lf)
  3-RDOF(?link)

Explanation:
  This entry has no application.


---
PFT entry: (2,3,in-line) (?M_1 moves)
---

Initial status:
  2-TDOF(?link, ?point, ?plane, ?lf)
  3-RDOF(?link)

Explanation:
  This entry has no application.



---
PFT entry: (3,3,in-line) (?M_1 moves)
---

Initial status:
  3-TDOF(?link)
  3-RDOF(?link)

Plan fragment:
  begin
  R[0] = line(gmp(?M_2), gmz(?M_2));
  R[1] = perp-dist(gmp(?M_1), R[0]);
  R[2] = vec-diff(R[1], gmp(?M_1));
  translate(?link, R[2]);
  R[3] = perp-base(gmp(?M_1), R[0]);
  end;

New status:
  1-TDOF(?link, R[3], R[0], R[3])
  3-RDOF(?link)

Explanation:
  Geom ?link is free to translate, so the translation
  vector is measured and the ?link is moved.
  No checks are required.
